import os
import asyncio
from pyrogram import Client, filters
from pyrogram.types import InlineKeyboardMarkup, InlineKeyboardButton, Message, CallbackQuery
from telegraph import upload_file
from utils import get_file_id
@Client.on_message(filters.command("telegraph") & filters.private)
async def telegraph(bot, message):
    replied = message.reply_to_message
    if not replied:
        await message.reply_text("‚ö†Ô∏è  Ä·¥á·¥ò ü è ·¥õ·¥è ·¥Ä ·¥ò ú·¥è·¥õ·¥è ·¥è Ä ·¥†…™·¥Ö·¥á·¥è ·¥ú…¥·¥Ö·¥á Ä 5 ·¥ç ô")
        return
    file_info = get_file_id(replied)
    if not file_info:
        await message.reply_text("…¥·¥è·¥õ s·¥ú·¥ò·¥ò·¥è Ä·¥õ·¥á·¥Ö üòë")
        return
    msg = await message.reply_text(text="<code>·¥ò Ä·¥è·¥Ñ·¥áss…™…¥…¢....</code>", disable_web_page_preview=True)   
    media = await message.reply_to_message.download()   
    await msg.edit_text("<code>·¥Ö·¥è…¥·¥á :)</code>", disable_web_page_preview=True) 
    try:
        response = upload_file(media)
    except Exception as error:
        print(error)
        await msg.edit_text(text=f"Error :- {error}", disable_web_page_preview=True)  
        await asyncio.sleep(3)
        return await msg.delete()   
    try:
        os.remove(media)
    except Exception as error:
        print(error)
        return   
    await msg.delete()
    await message.reply_photo(
        photo=f'https://graph.org{response[0]}',
        caption=f"<b> è·¥è·¥ú Ä ·¥õ·¥á ü·¥á…¢ Ä·¥Ä·¥ò ú  ü…™…¥·¥ã ·¥Ñ·¥è·¥ç·¥ò ü·¥á·¥õ·¥á·¥Ö üëá</b>\n\n<code>https://graph.org{response[0]}</code>\n\n<b>·¥ò·¥è·¥°·¥á Ä·¥á·¥Ö  ô è - @hbbotz</b>",       
        reply_markup=InlineKeyboardMarkup( [[
            InlineKeyboardButton(text="‚úì ·¥è·¥ò·¥á…¥  ü…™…¥·¥ã ‚úì", url=f"https://graph.org{response[0]}"),
            InlineKeyboardButton(text="üì± s ú·¥Ä Ä·¥á  ü…™…¥·¥ã", url=f"https://telegram.me/share/url?url=https://graph.org{response[0]}")
            ],[
            InlineKeyboardButton(text="‚ùå ·¥Ñ ü·¥ès·¥á ‚ùå", callback_data="close_data")
            ]])
    )
